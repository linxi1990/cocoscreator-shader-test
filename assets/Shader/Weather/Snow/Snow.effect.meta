{
  "ver": "1.0.25",
  "uuid": "ef579d9b-d8be-44b1-9a15-e4da2694d7d2",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform float time;\nvoid main () {\n  const mat3 p = mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\n  vec2 uv = v_uv0.xy;\n  vec3 acc = vec3(0.0);\n  float dof = 5.*sin(time*.1);\n  for (int i=0;i<50;i++) {\n    float fi = float(i);\n    vec2 q = uv*(1.+fi*.5);\n    q += vec2(q.y*(.3*mod(fi*7.238917,1.)-.3*.5),.6*time/(1.+fi*.5*.03));\n    vec3 n = vec3(floor(q),31.189+fi);\n    vec3 m = floor(n)*.00001 + fract(n);\n    vec3 mp = (31415.9+m)/fract(p*m);\n    vec3 r = fract(mp);\n    vec2 s = abs(mod(q,1.)-.5+.9*r.xy-.45);\n    s += .01*abs(2.*fract(10.*q.yx)-1.);\n    float d = .6*max(s.x-s.y,s.x+s.y)+max(s.x,s.y)-.01;\n    float edge = .005+.05*min(.5*abs(fi-5.-dof),1.);\n    acc += vec3(smoothstep(edge,-edge,d)*(r.x/(1.+.02*fi*.5)));\n  }\n  gl_FragColor = vec4(vec3(acc),1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nin vec4 v_color;\nin vec2 v_uv0;\nuniform TIME {\n  float time;\n};\nvoid main () {\n  const mat3 p = mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\n  vec2 uv = v_uv0.xy;\n  vec3 acc = vec3(0.0);\n  float dof = 5.*sin(time*.1);\n  for (int i=0;i<50;i++) {\n    float fi = float(i);\n    vec2 q = uv*(1.+fi*.5);\n    q += vec2(q.y*(.3*mod(fi*7.238917,1.)-.3*.5),.6*time/(1.+fi*.5*.03));\n    vec3 n = vec3(floor(q),31.189+fi);\n    vec3 m = floor(n)*.00001 + fract(n);\n    vec3 mp = (31415.9+m)/fract(p*m);\n    vec3 r = fract(mp);\n    vec2 s = abs(mod(q,1.)-.5+.9*r.xy-.45);\n    s += .01*abs(2.*fract(10.*q.yx)-1.);\n    float d = .6*max(s.x-s.y,s.x+s.y)+max(s.x,s.y)-.01;\n    float edge = .005+.05*min(.5*abs(fi-5.-dof),1.);\n    acc += vec3(smoothstep(edge,-edge,d)*(r.x/(1.+.02*fi*.5)));\n  }\n  gl_FragColor = vec4(vec3(acc),1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}