{
  "ver": "1.0.25",
  "uuid": "8ace74e7-0926-4a2a-b05e-447d5201b4d4",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nuniform float num;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nvec4 draw(vec2 uv) {\n  return v_color * texture2D(texture,uv).rgba;\n}\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid main() {\n  vec4 blurred = vec4(0.);\n  for (float i = 0.; i < 5.; i++) {\n      vec2 q = vec2(cos(degrees((i/5.)*360.)),sin(degrees((i/5.)*360.))) * (rand(vec2(i,v_uv0.x+v_uv0.y))+num);\n      vec2 uv2 = v_uv0+(q*num);\n      blurred += draw(uv2)/2.;\n      q = vec2(cos(degrees((i/5.)*360.)),sin(degrees((i/5.)*360.))) * (rand(vec2(i+2.,v_uv0.x+v_uv0.y+24.))+num);\n      uv2 = v_uv0+(q*num);\n      blurred += draw(uv2)/2.;\n  }\n  blurred /= 5.;\n  gl_FragColor = vec4(blurred);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nuniform NUM {\n  float num;\n};\nin vec2 v_uv0;\nin vec4 v_color;\nvec4 draw(vec2 uv) {\n  return v_color * texture2D(texture,uv).rgba;\n}\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid main() {\n  vec4 blurred = vec4(0.);\n  for (float i = 0.; i < 5.; i++) {\n      vec2 q = vec2(cos(degrees((i/5.)*360.)),sin(degrees((i/5.)*360.))) * (rand(vec2(i,v_uv0.x+v_uv0.y))+num);\n      vec2 uv2 = v_uv0+(q*num);\n      blurred += draw(uv2)/2.;\n      q = vec2(cos(degrees((i/5.)*360.)),sin(degrees((i/5.)*360.))) * (rand(vec2(i+2.,v_uv0.x+v_uv0.y+24.))+num);\n      uv2 = v_uv0+(q*num);\n      blurred += draw(uv2)/2.;\n  }\n  blurred /= 5.;\n  gl_FragColor = vec4(blurred);\n}"
      }
    }
  ],
  "subMetas": {}
}