// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #define linewidth 0.0125
  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    // vec4 o = vec4(1, 1, 1, 1);

    // #if USE_TEXTURE
    // o *= texture(texture, v_uv0);
    //   #if CC_USE_ALPHA_ATLAS_TEXTURE
    //   o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
    //   #endif
    // #endif

    // o *= v_color;

    // ALPHA_TEST(o);
    vec4 o = texture(texture, v_uv0);
    float a = 0.;
    if(o.a > 0.2){
      gl_FragColor = v_color * o;
    }
    else{
      a += texture(texture, v_uv0 + vec2(linewidth * cos(30.0), linewidth * sin(30.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(60.), linewidth * sin(60.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(90.), linewidth * sin(90.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(120.), linewidth * sin(120.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(150.), linewidth * sin(150.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(180.), linewidth * sin(180.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(210.), linewidth * sin(210.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(240.), linewidth * sin(240.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(270.), linewidth * sin(270.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(300.), linewidth * sin(300.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(330.), linewidth * sin(330.))).a;
      a += texture(texture, v_uv0 + vec2(linewidth * cos(360.), linewidth * sin(360.))).a;
      if(a > 0.6){
        gl_FragColor = v_color * (o + vec4(0., 1., 0., 1.));
      }
      else{
        gl_FragColor = v_color * o;
      }
    }
  }
}%
