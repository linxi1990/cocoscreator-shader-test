{
  "__type__": "cc.EffectAsset",
  "_name": "PostTexture",
  "_objFlags": 0,
  "_native": "",
  "properties": null,
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "properties": {
            "texture": {
              "value": "white",
              "type": 29
            },
            "time": {
              "value": [
                0
              ],
              "type": 13
            }
          },
          "program": "PostTexture|vs|fs"
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 3547791879,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform LOD {\n  float time;\n};\nvoid main () {\n  vec2 q = v_uv0.xy;\n  vec2 uv = 0.5 + (q-0.5)*(0.9 + 0.1*sin(0.2*time));\n  vec4 oricol = texture2D( texture, v_uv0);\n  vec3 col;\n  col.r = texture2D(texture,vec2(uv.x+0.003,-uv.y)).x;\n  col.g = texture2D(texture,vec2(uv.x+0.000,-uv.y)).y;\n  col.b = texture2D(texture,vec2(uv.x-0.003,-uv.y)).x;\n  col = clamp(col*0.5+0.5*col*col*1.2,0.0,1.0);\n  col *= 0.5 + 0.5*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y);\n  col *= vec3(0.95,1.05,0.95);\n  col *= 0.9+0.1*sin(10.0*time+uv.y*1000.0);\n  col *= 0.99+0.01*sin(110.0*time);\n  float comp = smoothstep( 0.2, 0.7, sin(time) );\n  col = mix( col, oricol.xyz, clamp(-2.0+2.0*q.x+3.0*comp,0.5,1.0));\n  gl_FragColor = vec4(col,1.0);\n}"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float time;\nvoid main () {\n  vec2 q = v_uv0.xy;\n  vec2 uv = 0.5 + (q-0.5)*(0.9 + 0.1*sin(0.2*time));\n  vec4 oricol = texture2D( texture, v_uv0);\n  vec3 col;\n  col.r = texture2D(texture,vec2(uv.x+0.003,-uv.y)).x;\n  col.g = texture2D(texture,vec2(uv.x+0.000,-uv.y)).y;\n  col.b = texture2D(texture,vec2(uv.x-0.003,-uv.y)).x;\n  col = clamp(col*0.5+0.5*col*col*1.2,0.0,1.0);\n  col *= 0.5 + 0.5*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y);\n  col *= vec3(0.95,1.05,0.95);\n  col *= 0.9+0.1*sin(10.0*time+uv.y*1000.0);\n  col *= 0.99+0.01*sin(110.0*time);\n  float comp = smoothstep( 0.2, 0.7, sin(time) );\n  col = mix( col, oricol.xyz, clamp(-2.0+2.0*q.x+3.0*comp,0.5,1.0));\n  gl_FragColor = vec4(col,1.0);\n}"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [],
      "blocks": [
        {
          "name": "LOD",
          "members": [
            {
              "name": "time",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        }
      ],
      "record": null,
      "name": "PostTexture|vs|fs"
    }
  ]
}