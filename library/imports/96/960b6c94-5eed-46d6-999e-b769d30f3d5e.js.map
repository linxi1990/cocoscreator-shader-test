{"version":3,"sources":["assets\\resources\\SpriteShaderUpdatemy1.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;AAE7F,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAgD,sCAAY;IAA5D;QAEI,YAAY;QACZ,kBAAkB;QAHtB,qEAmDC;QA9CG,cAAc;QACd,sBAAsB;QACtB,KAAK;QACL,iBAAiB;QACjB,2BAA2B;QAC3B,KAAK;QAEL,qBAAqB;QACrB,0BAA0B;QAC1B,0BAA0B;QAC1B,gDAAgD;QAChD,QAAQ;QACR,IAAI;QAIJ,WAAK,GAAG,IAAI,CAAC;QAGb,UAAI,GAAG,GAAG,CAAC;QAEX,eAAS,GAAgB,IAAI,CAAC;QAC9B,WAAK,GAAG,CAAC,CAAC;;IAwBd,CAAC;IAtBG,qCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,mCAAM,GAAN,UAAO,EAAE;QACL,qBAAqB;QACrB,uDAAuD;QACvD,IAAI;QACJ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACpB;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,EAAE;QACN,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IA7BD;QADC,QAAQ;qDACI;IAGb;QADC,QAAQ;oDACE;IAxBM,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAmDtC;IAAD,yBAAC;CAnDD,AAmDC,CAnD+C,EAAE,CAAC,SAAS,GAmD3D;kBAnDoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SpriteShaderUpdate extends cc.Component {\r\n    \r\n    // @property\r\n    // _sprite = null;\r\n    \r\n    // @property({\r\n    //     type: cc.Sprite\r\n    // })\r\n    // get sprite() {\r\n    //     return this._sprite;\r\n    // };\r\n\r\n    // set sprite (spr) {\r\n    //     this._sprite = spr;\r\n    //     if (this._sprite) {\r\n    //         this._material = this.getMaterial(0);\r\n    //     }\r\n    // }\r\n\r\n\r\n    @property\r\n    limit = 1000;\r\n\r\n    @property\r\n    step = 0.1;\r\n\r\n    _material: cc.Material = null;\r\n    _time = 0;\r\n\r\n    onEnable() {\r\n        this._material = this.getComponent('myrender').getMaterial(0);\r\n    }\r\n\r\n    update(dt) {\r\n        // if (this.sprite) {\r\n        //     this._material = this.sprite.sharedMaterials[0];\r\n        // }\r\n        if (this._material) {\r\n            this.setTime(dt);\r\n        }\r\n    }\r\n\r\n    setTime(dt) {\r\n        this._time += this.step;\r\n        this._time = this._time >= this.limit ? 0 : this._time;\r\n        this._material.setProperty('time', this._time);\r\n    }\r\n\r\n    onDisable() {\r\n        this._material = null;\r\n    }\r\n}\r\n"]}