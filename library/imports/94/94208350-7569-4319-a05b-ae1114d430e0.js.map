{"version":3,"sources":["assets\\Example\\IA\\CustomIARenderComponent.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\nimport CustomIAAssembler from './CustomIAAssembler'\n\n@ccclass\nexport default class CustomIARenderComponent extends cc.RenderComponent {\n    @property\n    _texture = null;\n    \n    @property({\n        type: cc.Texture2D\n    })\n    get texture () {\n        return this._texture;\n    }\n\n    set texture (val) {\n        if (this._texture !== val) {\n            this._texture = val;\n            this.applyTexture();\n        }\n    }\n\n    uv = [];\n    local = [];\n    posOffset = 0;\n    max = 100;\n    direction = 1;\n    speed = 10;\n    onEnable () {\n        super.onEnable();\n        this._activateMaterial();\n\n        this.initVertexData();\n    }\n\n    //override\n    _resetAssembler () {\n        this.setVertsDirty(true);\n        this._assembler = new CustomIAAssembler();\n        this._assembler.init(this);\n    }\n\n    //override\n    _activateMaterial () {\n        let material = this.sharedMaterials[0];\n        if (!material) {\n            this.disableRender();\n            return;\n        }\n        \n        material = cc.Material.getInstantiatedMaterial(material, this);\n        material.setProperty(\"texture\", this.texture);\n        this.setMaterial(0, material);\n        this.markForRender(true);\n    }\n\n    applyTexture () {\n        let material = this.getMaterial(0);\n        if (!material) {\n            return\n        }\n\n        material.setProperty(\"texture\", this.texture);\n    }\n\n    initVertexData () {\n        let buffer = this._assembler.getBuffer();\n        buffer.reset();\n        buffer.request(4, 6);\n\n        this.fillUV(buffer);\n        this.fillIndices(buffer);\n        this.fillVertex(buffer);\n\n        buffer.uploadData();\n\n        this._assembler._ia._count = 6;\n    }\n\n    update (dt) {\n        if (!this.getMaterial(0)) { \n            return\n        }\n\n        this.direction = this.posOffset >= this.max ? -1 : this.direction;\n        this.direction = this.posOffset <= 0 ? 1 : this.direction;\n        let step = dt * this.direction * this.speed;\n        this.posOffset = this.posOffset + step;\n\n        let buffer = this._assembler.getBuffer();\n        let vbuf = buffer._vData;\n  \n        vbuf[0] += step;\n        vbuf[15] -= step;\n\n        buffer._vb.update(0, vbuf);\n    }\n\n    fillUV (buffer) {\n        let l = 0, r = 1, b = 1, t = 0;\n        let vbuf = buffer._vData;\n\n        vbuf[2] = l;\n        vbuf[3] = b;\n        vbuf[7] = r;\n        vbuf[8] = b;\n        vbuf[12] = l;\n        vbuf[13] = t;\n        vbuf[17] = r;\n        vbuf[18] = t;\n    }\n\n    fillIndices (buffer) {\n        let iData = buffer._iData;\n        iData[0] = 0;\n        iData[1] = 1;\n        iData[2] = 2;\n        iData[3] = 1;\n        iData[4] = 3;\n        iData[5] = 2;\n\n        let indicesData = new Uint16Array(iData.buffer, 0, iData.length);\n        buffer._ib.update(0, indicesData);\n    }\n\n    fillVertex (buffer) {\n        let uintbuf = buffer._uintVData;\n        \n        let node = this.node,\n        cw = node.width, ch = node.height,\n        appx = node.anchorX * cw, appy = node.anchorY * ch;\n\n        let l = - appx,\n            b = - appy,\n            r = cw - appx,\n            t = ch - appy;\n\n        let local = this.local;\n        local[0] = l;\n        local[1] = b;\n        local[2] = r;\n        local[3] = t;\n\n        // color\n        uintbuf[4] = this.node.color._val;\n        uintbuf[9] = this.node.color._val;\n        uintbuf[14] = this.node.color._val;\n        uintbuf[19] = this.node.color._val;\n\n        this.updateWorldVerts(buffer);\n    }\n\n    updateWorldVerts (buffer) {\n\n        this.node._updateWorldMatrix();\n        \n        let vbuf = buffer._vData;\n        let local = this.local;\n        let matrix = this.node._worldMatrix;\n        let matrixm = matrix.m,\n            a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5],\n            tx = matrixm[12], ty = matrixm[13];\n\n        let vl = local[0], vr = local[2],\n            vb = local[1], vt = local[3];\n        \n        let justTranslate = a === 1 && b === 0 && c === 0 && d === 1;\n\n        if (justTranslate) {\n            // left bottom\n            vbuf[0] = vl + tx;\n            vbuf[1] = vb + ty;\n            // right bottom\n            vbuf[5] = vr + tx ;\n            vbuf[6] = vb + ty;\n            // left top\n            vbuf[10] = vl + tx;\n            vbuf[11] = vt + ty;\n            // right top\n            vbuf[15] = vr + tx;\n            vbuf[16] = vt + ty;\n        } else {\n            let al = a * vl, ar = a * vr,\n            bl = b * vl, br = b * vr,\n            cb = c * vb, ct = c * vt,\n            db = d * vb, dt = d * vt;\n\n            // left bottom\n            vbuf[0] = al + cb + tx;\n            vbuf[1] = bl + db + ty;\n            // right bottom\n            vbuf[5] = ar + cb + tx;\n            vbuf[6] = br + db + ty;\n            // left top\n            vbuf[10] = al + ct + tx;\n            vbuf[11] = bl + dt + ty;\n            // right top\n            vbuf[15] = ar + ct + tx;\n            vbuf[16] = br + dt + ty;\n        }\n    }\n}\n"]}